function formatNum(num) {
    num += ''; // transforma para string
    num = num.replace(/\,/g, '.');
    num = parseFloat(num);

    if (isNaN(num)) {
        return;
    }

    return num.toFixed(2).replace(/\./g, ',');
}

function toNum(num) {
    num += '';
    num = num.replace(/\,/g, '.');
    num = parseFloat(num);

    return num;
}

function removeExtra(str) {
    str = str.replace(/\./g, '');
    str = str.replace(/\-/g, '');
    str = str.replace(/\//g, '');
    str = str.replace(/\(/g, '');
    str = str.replace(/\)/g, '');
    return str;
}

(function () {

    // links externos
    $("a[rel='external']").click(function () {
        window.open($(this).attr('href'));
        return false;
    });

    $('a.voltar').click(function () {
        history.back();
        return false;
    });

    $('.js-gdpr-close').click(function () {
        $.post(baseurl + 'politica_privacidade/gdpr_aceite', {

        }, function () {
            $("#gdpr-consent-banner").remove();
        });
    });

    // seleção de línguas
    $('.selecao-linguas__selecao').on('click', function () {
        $('.selecao-linguas__lista').toggle();
    });

    $(".selecao-moedas__selecao").on("click", function () {
        $(".selecao-moedas__lista").toggle()
    });

    $(document).on('ready', function () {
        checkLangWidth();
    });

    $(window).on('resize', function () {
        checkLangWidth();
    });

    // voltar da compra para o site
    $('.voltar-site').click(function () {
        return confirm('Cancelar a compra e voltar para o site da AMP Travels ?');
    });

    // cadastro
    $('body').on('blur', '.input-limpa', function () {
        $(this).val(removeExtra($(this).val()).toUpperCase());
    });

    // menu conta
    $('.minha-conta__menu-trigger').click(function () {
        $('.minha-conta__menu-lista').toggle();

        if ($('.minha-conta__menu-lista').is(":visible")) {
            $(this).hide();
        } else {
            $(this).show();
        }
    });

    // máscaras
    $(document).ready(function () {
        // telefone
        var maskBehavior = function (val) {
            return val.replace(/\D/g, '').length === 11 ? '(00) 0 0000-0000' : '(00) 0000-00009';
        },
            options = {
                onKeyPress: function (val, e, field, options) {
                    field.mask(maskBehavior.apply({}, arguments), options);
                }
            };
        $('.mask-phone').mask(maskBehavior, options);
        // telefone internacional
        var maskBehaviorIntl = function (val) {
            switch (parseInt(this.ddi_value)) {
                case 30:
                case 274:
                case 518:
                    return val.replace(/\D/g, '').length === 11 ? '(00) 0 0000-0000' : '(00) 0000-00009'; // Brasil
                    break;
                default:
                    return '00000000000000'; // default
                    break;
            }

        },
            optionsIntl = {
                onKeyPress: function (val, e, field, optionsIntl) {
                    var field_name = field.attr("name").replace(/fone/g, 'sl-ddi');
                    if (typeof field.attr("data-name") !== 'undefined') {
                        field_name = field.attr("data-name").replace(/fone/g, 'sl-ddi');;
                    }
                    var field_value = $("#" + field_name).val();
                    field.mask(maskBehaviorIntl.apply({
                        ddi_value: field_value
                    }, arguments), optionsIntl);
                }
            };

        var callIntl = {
            changeMaskIntl: function () {
                var field_name = $(this).attr("id").replace(/sl-ddi/g, 'fone');
                var field = $("." + field_name);
                field.mask(maskBehaviorIntl.apply({
                    ddi_value: $(this).val()
                }, [field.val()]), optionsIntl);
            }
        }

        $('.mask-phone-intlddi').on('change', callIntl.changeMaskIntl);
        $('.mask-phone-intl').mask(maskBehaviorIntl, optionsIntl);

        $('.mask-phone-intlddi').each(function (index, element) {
            callIntl.changeMaskIntl.call($(this));
        });

        // cartão
        var options = {
            onKeyPress: function (input, e, field, options) {
                var masks = ['0000 0000 0000 0000', '0000 000000 00000'];
                if (input.match(/^3[47]/)) {
                    mask = masks[1];
                    $('.mask-cvc').mask('9999');
                } else {
                    mask = masks[0];
                    $('.mask-cvc').mask('999');
                }

                $('.mask-cartao').mask(mask, options);
            }
        };
        $('.mask-cartao').mask('0000 0000 0000 0000', options);

        $('.mask-cpf').mask('000.000.000-00');
        $('.mask-cnpj').mask('00.000.000/0000-00');
        $('.mask-cep').mask('00000-000');
        $('.mask-data').mask('00/00/0000');
        $('.mask-data-mes').mask('00/00');
    });

    // pop-ups
    var popUpDelay = 1000;
    var i = 3000 + $('.pop-up').length * 1000;

    $($('.pop-up').get().reverse()).each(function () {
        $(this).delay(popUpDelay).animate({
            'opacity': 1,
            'bottom': 0
        }, 500).delay(i).fadeOut();

        popUpDelay += 1000;
        i -= 1000;
    });
})();

function checkLangWidth() {
    if ($(window).width() < 950) return;
    var maior_largura = 0;

    $('.selecao-linguas__lista').show();

    $('.selecao-linguas__ext').each(function () {
        if ($(this).width() > maior_largura) {
            maior_largura = $(this).width();
        }
    });

    //maior_largura -= 15;

    $('.selecao-linguas__lingua').width(maior_largura);
    $('.selecao-linguas__lista').hide();
}

function create_sticky($sticky, $sticky_ph, preserve_width) {
    if (!preserve_width) preserve_width = false;

    if ($sticky.length > 0) {
        var pos = $sticky_ph.offset().top,
            $win = $(window),
            height = $sticky.height(),
            width = $sticky.width();

        pos++;
        //pos = pos + height;

        $win.on("ready load scroll", function () {
            pos = $sticky_ph.offset().top;

            if ($win.width() < 768) {
                $sticky.addClass("fixed");
                $sticky.css({
                    'width': '100%'
                });
            } else {
                if ($win.scrollTop() >= pos) {
                    $sticky.addClass("fixed");
                    $sticky_ph.height(height);

                    if (preserve_width) {
                        $sticky.width(width);
                    }
                } else {
                    $sticky.removeClass("fixed");
                    $sticky_ph.height(0);

                    if (preserve_width) {
                        $sticky.css({
                            'width': 'auto'
                        });
                    }
                }
            }
        });

        if (preserve_width) {
            if ($win.width() < 768) {
                $sticky.css({
                    'width': '100%'
                });
            } else {
                $win.on("resize", function () {
                    $sticky.css({
                        'width': 'auto'
                    });
                    var w = $sticky.parent().width();
                    $sticky.width(w);
                });
            }
        }
    }
}

function scrollTo($jqobj) {
    //var cab_h = $('.site-cabecalho-fora').height();
    //var extra = 20;

    // scroll até elemento
    scroll_to = $jqobj.offset().top;
    $('html, body').animate({
        scrollTop: scroll_to
    }, 1000);
}

/**
 * Lazy Loading from: https://www.smashingmagazine.com/2018/01/deferring-lazy-loading-intersection-observer-api/
 */
// create config object: rootMargin and threshold
// are two properties exposed by the interface
const config = {
    rootMargin: '0px 0px 50px 0px',
    threshold: 0
};

function preloadImage(img) {
    const src = img.getAttribute('data-src');
    if (!src) { return; }
    img.src = src;
}

// register the config object with an instance
// of intersectionObserver
let observer = new IntersectionObserver(function (entries, self) {
    // iterate over each entry
    entries.forEach(entry => {
        // process just the images that are intersecting.
        // isIntersecting is a property exposed by the interface
        if (entry.isIntersecting) {
            // custom function that copies the path to the img
            // from data-src to src
            preloadImage(entry.target);
            // the image is now in place, stop watching
            self.unobserve(entry.target);
        }
    });
}, config);
const imgs = document.querySelectorAll('[data-src]');
imgs.forEach(img => {
    observer.observe(img);
});
// Gerenciamento da pré-compra (pacote)
// guilhermemuller.com.br
// contato@guilhermemuller.com.br

(function () {

    // variáveis base
    var numeroPassageiros = 1;
    var grupoServicoPrincipal;
    var servicoPrincipal = 0;
    var auxVar1 = 0;            // Auxiliary varable
    var carregandoHTML = '<div class="passo__carregando a-centro"><i class="fas fa-pulse fa-spinner fa-2x"></i></div>';
    var promocode;
    var pid = $('input[name="pid"]').val();
    var servicosAdicionais = [];

    // controlador de número de passageiros
    var $passageirosSeletor = $('.passo__passageiros-seletor');
    var $passageirosMais = $('.passo__passageiros-mais');
    var $passageirosMenos = $('.passo__passageiros-menos');
    var $passageirosNumero = $('.passo__passageiros-numero');
    var $inputPassageiros = $('#numpass');
    var numeroMinPassageiros = toNum($passageirosSeletor.attr('data-numpass-min')) || 1;
    var numeroMaxPassageiros = toNum($passageirosSeletor.attr('data-numpass-max'));
    var numeroPassageirosSessao = toNum($passageirosSeletor.attr('data-numpass-sessao'));
    if (numeroPassageirosSessao > 0) {
        numeroPassageiros = numeroPassageirosSessao; // atualizamos com os dados de sessao.
    }

    // tipos de serviço (grupos)
    var $gruposServicoPrincipal = $('.grupo-servico__label');
    var $inputGrupoServicoPrincipal = $('.grupo-servico__input');

    // tipos de serviço (grupos de datas)
    var $gruposDatas = $('.grupo-servico__label');
    var $inputGrupoDatas = $('.grupo-servico__input');

    // serviços principais
    var $servicosPrincipais = $('.servico-principal');
    var $inputServicosPrincipais = $('.rd-servico-principal');
    var $servicosPrincipaisAbrir = $('.passo__servicos-principais-abrir');
    var $servicoPrincipalDetalhes = $('#servico-principal__detalhes');

    // serviços adicionais
    var $servicosAdicionais = $('.servico-adicional');
    var $inputServicosAdicionais = $('.rd-servico-adicional');
    var $servicosAdicionaisDetalhes = $('#servicos-adicionais');

    // mensagens
    var $mensagemErroFatorPass = $('.mensagem--erro-fatorpass');

    // formas de pagamento
    var $formasPagamentoDetalhes = $('.passo__formas-pagamento');

    // promocode
    var $inputPromocode = $('.promocode__input');
    var $promocodeBotao = $('.promocode__botao');

    // containers passos etc
    var $contServicoPrincipal           = $('.pacote__servico-principal');
    var $contServicoPrincipalSecundario = $('.servico-principal-secundario');

    var $contServicosAdicionais = $('.pacote__servicos-adicionais');
    var $contServicosPrincipalData = $('.servico-principal-data');
    var $contFormaPagamentoCupom = $('.pacote__formas-pagamento-cupom');
    var $contDescricao          = $('.pacote__descricao-galeria-mapa');
    var $contObsRoteiro         = $('.pacote__observacoes-roteiro');
    var $contGrupoDatas         = $('.passo__grupo-datas');
    var $selGrupoDatas         = $('.grupo-datas');
    var $inputGrupoDatas        = $('.grupo-datas__input');




    /**
     * Eventos
     */

    // controle de número de passageiros
    $passageirosMais.click(function () {
        setNumeroPassageiros(1);
    });

    $passageirosMenos.click(function () {
        setNumeroPassageiros(-1);
    });

    $servicosPrincipaisAbrir.click(function(){
        $(this).fadeOut("fast");
        $(".servico-principal-data .form__checkbox").show();
        $servicosPrincipais.removeClass('ativo');
        removerAdicionais();

        resetaResumoPagamento();
        removerDetalhesProduto();
        $inputServicosPrincipais.prop('checked', false);
    })
    //

    // tipos de serviço
    $gruposServicoPrincipal.click(function () {
        grupoServicoPrincipal = $(this).attr('data-grupo');

        resetaPassos();

        switch(grupoServicoPrincipal){
            default:
                processaGrupoServicoPrincipal();
                // atualiza na sessão
                $.post(baseurl + 'pacotes/grupoajax', {
                    grupo: grupoServicoPrincipal
                });
                scrollTo($contServicoPrincipal);
                break;
            case 'longtrip':
            case 'bus-trip':
            case 'shuttle':
                $contGrupoDatas.fadeIn('fast');
                $contGrupoDatas.find("[data-keyGroup="+grupoServicoPrincipal+"]").fadeIn('fast');
                break;
        }
    });

    $selGrupoDatas.click(function(){
        grupoData       = $(this).attr('data-grupo');
        grupoChaveData  = $(this).attr('data-keyGroup');
        resetaPassosDatas();

        processaGrupoDatasServicoPrincipal(grupoChaveData+"-"+grupoData);
    });


    function doServicoPrincipais(){
        var $input      = $(this).find('input');
        var id          = $(this).attr('id');
        var valor       = $input.val();
        var fatorPass   = $input.attr('data-fatorpass');
        auxVar1 = $input.attr('data-auxvar-1');

        $mensagemErroFatorPass.hide();

        // se não estiver checado (por ex. serviço esgotado, volta)
        if (!$input.prop('checked')) return;

        // se for o mesmo serviço principal que antes, cancela procedimentos
        // if (valor == getSelectedProductId()) {
        //     // esconde os outros serviços e mostra opção para expandir
        //     $servicosPrincipais.not('#' + id).fadeOut('fast');
        //     $servicosPrincipaisAbrir.fadeIn('fast');

        //     return;
        // }

        // desativa serviços
        $servicosPrincipais.removeClass('ativo');

        servicoPrincipal = valor;

        if(grupoServicoPrincipal != 'longtrip'){
            // Long trip have an especific call to set servprinproduto. Check
            $(document).find('input[name="servprinproduto"]').val(getSelectedProductId());
        }

        // ativa o serviço principal selecionado
        $(this).addClass('ativo');

        // esconde os outros serviços e mostra opção para expandir
        $servicosPrincipais.not('#' + id).fadeOut('fast');
        $servicosPrincipaisAbrir.fadeIn('fast');

        console.log($(this));
        carregaServicoPrincipal($input.hasClass('skip-adicionais'));
        carregaFormasPagamento($input.hasClass('skip-adicionais'));

        scrollTo($contServicoPrincipal);
    }

    // serviços principais
    $servicosPrincipais.off("click", doServicoPrincipais);
    $servicosPrincipais.on("click", doServicoPrincipais);


    //

    // serviços adicionais

    handlerAdicionaisSelecao();

    // promocode

    $promocodeBotao.click(function (e) {
        aplicaPromocode();

        e.preventDefault();
    });

    /**
     * Funções
     */

    function resetaPassos() {
        $contServicosAdicionais.hide();
        $contGrupoDatas.hide();
        $contGrupoDatas.find(".grupo-datas").hide();
        $mensagemErroFatorPass.hide();
        $contFormaPagamentoCupom.hide();
        $contServicoPrincipal.hide();
        $contServicoPrincipalSecundario.hide();
        $inputServicosPrincipais.prop('checked', false);
        $inputGrupoDatas.prop('checked', false);
        $servicosPrincipais.hide().removeClass('ativo');
        $servicosPrincipaisAbrir.hide();
        $servicoPrincipalDetalhes.hide();
        $contServicosPrincipalData.hide();
        $contObsRoteiro.hide();
        servicoPrincipal = null;

        resetaResumoPagamento();
        removerDetalhesProduto();
    }


    function resetaPassosDatas() {
        $contServicoPrincipalSecundario.hide();
        $servicosPrincipaisAbrir.hide();
        removerAdicionais();

        resetaResumoPagamento();
        removerDetalhesProduto();
    }

    function resetaResumoPagamento() {
        let element = $('#resumo__valor-passageiro');

        if (element.hasClass('keep')) {
            return;
        }

        element.empty();
    }

    function removerDetalhesProduto() {
        $(document).find('.servico-principal__info').empty();
        $(document).find('.servico-principal__detalhes').empty();
    }

    function removerAdicionais() {
        $(document).find('.pacote__servicos-adicionais').hide();
        $(document).find('.pacote__formas-pagamento-cupom').hide();
        $servicosAdicionaisDetalhes.html("");
    }

    function setNumeroPassageiros(incremento) {
        numeroPassageiros = toNum($passageirosNumero.text());

        if (isNaN(numeroPassageiros)) {
            numeroPassageiros = 1;
        }

        var test = numeroPassageiros + incremento;
        if (test <= numeroMaxPassageiros && test >= numeroMinPassageiros) {
            // só atualiza se estiver dentro do número de passageiros permitido
            numeroPassageiros += incremento;

            $inputPassageiros.val(numeroPassageiros);
            $passageirosNumero.text(numeroPassageiros);

            // atualiza na sessão
            $.post(baseurl + 'pacotes/numpassajax', {
                numpass: numeroPassageiros,
                servprin: servicoPrincipal,
                product: getSelectedProductId(),
                selectedDates: getSelectedDates(),
            }, function () {

                resetaPassos();

                // verifica grupo de serviços princiais
                $inputGrupoServicoPrincipal.each(function () {
                    if ($(this).prop('checked') == true) {
                        grupoServicoPrincipal = $(this).attr('data-grupo');
                        //processaGrupoServicoPrincipal();
                    }
                });

                //carregaServicosAdicionais();
                //carregaFormasPagamento();
            });
        }
    }

    function processaGrupoServicoPrincipal() {
        $contServicoPrincipal.fadeIn('fast');
        $contDescricao.fadeIn('fast');
        // $contObsRoteiro.fadeIn('fast');

        mostraServicosPrincipais();
    }

    function processaGrupoDatasServicoPrincipal(grupoData) {
        $(".servico-principal-data .form__checkbox").hide();

        $contServicosPrincipalData.hide();
        $(".grupo-"+grupoData).fadeIn('fast');
        $contServicoPrincipal.fadeIn('fast');

        // $contObsRoteiro.fadeIn('fast');

        mostraServicosPrincipais();
    }

    function carregaServicoPrincipal(skip) {
        $servicoPrincipalDetalhes.show().html(carregandoHTML);

        $.post(baseurl + 'pacotes/getservprinajax', {
            pacote: pid,
            grupo: grupoServicoPrincipal,
            servprin: servicoPrincipal,
            product: getSelectedProductId(),
            numpass: $inputPassageiros.val(),
            auxvar1: auxVar1
        }, function (data) {
            if (data) {
                $servicoPrincipalDetalhes.html(data);
                carregaRadioServicoPrincipalSecundario();

                // mostra passos subsequentes
                if (!skip && grupoServicoPrincipal != 'longtrip') {
                    $contServicosAdicionais.fadeIn('fast');
                    $contFormaPagamentoCupom.fadeIn('fast');

                    carregaServicosAdicionais();
                    carregaFormasPagamento();
                    processaObservacoes();
                }

            } else {
                $servicoPrincipalDetalhes.html('<p>Nenhuma informação localizada.</p>');
            }
        });
    }

    function processaObservacoes() {
        let observacoes = $(document).find('.pacote-observacoes');
        let target = $(document).find('.pacote__observacoes-roteiro > .pacote__observacoes > .corpo-texto');

        target.html(observacoes.html());
        $contObsRoteiro.show();

        observacoes.hide();
    }

    function mostraServicosPrincipais(callback) {
        // apenas mostra os serviços do grupo selecionado
        $('.servico-principal__grupo-' + grupoServicoPrincipal).fadeIn('fast');
    }

    function carregaServicosAdicionais(skip) {
        if (!servicoPrincipal || skip) {
            return false;
        }

        $servicosAdicionaisDetalhes.html(carregandoHTML);

        var productId = getSelectedProductId();
        if(grupoServicoPrincipal == 'longtrip'){
            productId = getSelectedProduct2Value();
        }

        $.post(baseurl + 'pacotes/getservadicajax', {
            pacote: pid,
            grupo: grupoServicoPrincipal,
            servprin: servicoPrincipal,
            numpass: $inputPassageiros.val(),
            product: productId
        }, function (data) {
            if (data) {
                $servicosAdicionaisDetalhes.html(data);
                handlerAdicionaisSelecao();
                // mostra passos subsequentes
                if (!skip) {
                    $contServicosAdicionais.fadeIn('fast');
                    $contFormaPagamentoCupom.fadeIn('fast');
                    carregaFormasPagamento();
                    processaObservacoes();
                }
            } else {
                $servicosAdicionaisDetalhes.html('<p>Nenhum serviço adicional encontrado.</p>');
            }
        });
    }

    function handlerAdicionaisSelecao(){
        $contServicosAdicionais.off('click', '.servico-adicional', updatePreBooking);
        $contServicosAdicionais.on('click', '.servico-adicional', updatePreBooking);
    }

    function updatePreBooking(){
        var $input = $(this).find('input');

        if ($input.prop('disabled')) return; // não prossegue se estiver esgotado
        if($input.prop('checked') == false && $input.prop('type') == "radio") return;
        if($input.prop('type') == "checkbox"){
            var updateInput = $input.attr("updates");
            if(updateInput === undefined){ updateInput = 0;}
            updateInput++;
            $input.attr("updates",updateInput);
            if(updateInput == 2){
                $input.attr("updates",0);
            }else{
                return;
            }
        }

        // salva em sessão
        var grupo = $input.attr('data-grupo');
        var numpass = 1;

        if (grupo == 1) {
            numpass = $input.attr('data-numpass');
            // checkbox
            var val = [];
            $('input[data-grupo="1"]').each(function () {
                if ($(this).prop('checked')) {
                    if ($(this).attr('data-numpass') == numpass) {
                        // evita de ficar pegando outros checkboxes.
                        val.push($(this).val());
                    }
                }
            });
        } else {
            // radio
            var val = $input.val();
            numpass = $input.attr('data-numpass');
        }
        var product     = getSelectedProduct();
        var packageId   = product.attr("packageId");
        var productId   = getSelectedProductId();
        var currency    = getPackageCurrency();

        atualizaSelecaoAdicionais();
        // post para php

        carregaFormasPagamento();
    }

    function atualizaSelecaoAdicionais(){
        servicosAdicionais = [];
        $(document).find('.rd-servico-adicional').each(function () {
            if ($(this).prop('checked') == true) {
                servicosAdicionais.push($(this).val());
            }
        });
    }

    function carregaFormasPagamento(skip) {
        if (!servicoPrincipal || skip) {
            return false;
        }

        servicosAdicionais = [];

        atualizaSelecaoAdicionais();

        $formasPagamentoDetalhes.html(carregandoHTML);
        $('#resumo__valor-passageiro').html(carregandoHTML);

        var servicoSecundario = getServiceSecondary();

        $.post(baseurl + 'pacotes/getformapagajax', {
            pacote: pid,
            grupo: grupoServicoPrincipal,
            product: getSelectedProductId(),
            servprin: servicoPrincipal,
            servsec: servicoSecundario,  //used for longtrip
            servadic: servicosAdicionais,
            selectedDates: getSelectedDates(),
            numpass: $inputPassageiros.val(),
        }, function (data) {
            $('.pacote__formas-pagamento-cupom').show();

            if (data) {
                $formasPagamentoDetalhes.html(data);

                // copia conteúdo para resumo fixo
                $('#resumo__valor-passageiro').html($('#valor-passageiro').html());
                $('#resumo__valor-passageiro').addClass('mt');
            } else {
                $formasPagamentoDetalhes.html('<p>Nenhuma forma de pagamento encontrada.</p>');
            }
        });
    }

    function carregaRadioServicoPrincipalSecundario(){
        var productRadios = $('.rd-servico-principal-produto.longtrip');

        productRadios.unbind("click");
        productRadios.on("click", function (e) {
            let product = $(this);
            let postUrl = product.attr("postUrl");
            let productId = product.val();
            let input = product.find('input');
            var loading = '<div class="passo__carregando a-centro"><i class="fas fa-pulse fa-spinner fa-2x"></i></div>';
            var passengerError      = $(document).find('.mensagem--erro-fatorpass');
            var passengers          = $('.passo__passageiros-numero').text();
            var factorPassengers    = product.attr('data-fatorpass');

            passengerError.hide();

            bookingRules.resetaPassosAcomodacao();
            if(!bookingRules.validatePassengerByFactor(product, passengers, factorPassengers)){
                return;
            }

            $('.passo.pacote__servico-principal > .passo__conteudo > .servico-principal__detalhes > .servico-principal__info').remove();
            $('.passo.pacote__servico-principal > .passo__conteudo').append(loading);

            $(document).find('input[name="servprinproduto"]').val(product.val());

            $.post(postUrl, {
                grupo: product.attr("grupo"),
                servprin: productId,
                packageId: product.attr("packageId"),
                numpass: $('#numpass').val(),
                longtripRoute: product.attr("longtripRoute"),
                longtripAccomodationType:  product.attr("longtripAccomodationType"),
                longtripBoardingLocation:  product.attr("longtripBoardingLocation"),
            }, function (response) {
                $('.passo.pacote__servico-principal > .passo__conteudo > .passo__carregando').remove();
                $('.passo.pacote__servico-principal > .passo__conteudo > .servico-principal__detalhes').append(response);

                let observacoes = $(document).find('.pacote-observacoes');
                let target = $(document).find('.pacote__observacoes-roteiro > .pacote__observacoes > .corpo-texto');

                target.html(observacoes.html());
                $(document).find('.pacote__observacoes-roteiro').show();
                observacoes.hide();
                carregaServicosAdicionais();
                carregaFormasPagamento();
                processaObservacoes();
            });
        });
    }

    function getSelectedProductId() {
        let productId = $(document).find('.rd-servico-principal-produto:checked').attr('data-product');

        return productId;
    }

    function getSelectedProductRouteId() {
        let longtriproute = $(document).find('.rd-servico-secundario:checked').attr('longtriproute');

        return longtriproute;
    }

    function getSelectedProduct2Value() {
        let value = $(document).find('.rd-servico-secundario:checked').attr('value');

        return value;
    }

    function getSelectedProduct() {
        let product = $(document).find('.rd-servico-principal-produto:checked');

        return product;
    }

    function getPackageCurrency() {
        let currency = $(document).find('input[name="currency"]').val();

        return currency;
    }

    function getServiceSecondary() {
        let serviceSecondaryId = $(document).find('.rd-servico-secundario:checked').val();

        return serviceSecondaryId;
    }

    function getSelectedDates() {
        let selections = $('.rd-servico-principal-data:checked');
        let selectedDates = [];

        for (let i = 0; i < selections.length; i++) {
            selectedDates.push({
                'date': $(selections[i]).val(),
                'price': $(selections[i]).attr('data-price'),
                'product': getSelectedProductId,
            });
        }

        return selectedDates;
    }

    // promocode

    function aplicaPromocode() {
        promocode = $inputPromocode.val();
        $promocodeBotao.removeClass('promocode--sucesso');
        $promocodeBotao.removeClass('promocode--falha');

        if (promocode == '' || promocode == undefined || !promocode) {
            return false;
        }

        $promocodeBotao.html('<i class="fas fa-pulse fa-spinner"></i>');

        $.post(baseurl + 'package/apply-promo', {
            promocode: promocode,
            product: getSelectedProductId(),
        }, function (data) {
            if (data.status == 'sucesso') {
                $promocodeBotao.addClass('promocode--sucesso');
                $promocodeBotao.html('<i class="fas fa-check"></i>');
                carregaFormasPagamento();
            } else {
                $promocodeBotao.addClass('promocode--falha');
                $promocodeBotao.html('<i class="fas fa-times"></i>');

                window.setTimeout(function () {
                    $promocodeBotao.removeClass('promocode--falha');
                    $promocodeBotao.html('Aplicar');
                }, 2000);
            }
        }, 'json');
    }

    /**
     * Inicialização
     */

    function init() {
        // esconde containers
        $contServicoPrincipal.hide();
        $contServicosAdicionais.hide();
        $contGrupoDatas.hide();
        $contFormaPagamentoCupom.hide();
        $mensagemErroFatorPass.hide();
        $contDescricao.hide();
        $contObsRoteiro.hide();

        // verifica grupo de serviços princiais
        $inputGrupoServicoPrincipal.each(function () {
            if ($(this).prop('checked') == true) {
                grupoServicoPrincipal = $(this).attr('data-grupo');
                processaGrupoServicoPrincipal();
            }
        });

        $inputServicosPrincipais.each(function () {
            if ($(this).prop('checked') == true) {
                $(this).trigger('click');
            }
        });

        // fixa resumo
        create_sticky($('#resumo'), $('#resumo-ph'), true);
        resetaPassos();
        mostraServicosPrincipais();
    }

    init();

})();
// Gerenciamento de processo de reservas
// guilhermemuller.com.br
// contato@guilhermemuller.com.br

(function () {

    // variáveis base
    var pais = $('.pais').val();
    var totalGeral = 0;
    var descontoPromo = 0;
    var finalizar = false;
    var ravValor = 0;

    // jquery objs
    var $rav = $('#rav');

    /**
     * Eventos
     */

    $('body').on('change', '.sl-documento', function () {
        checkDocumento($(this));
    });

    $rav.blur(function () {
        var valor = $(this).val();

        if (isNaN(valor)) {
            valor = 0;
        }

        ravValor = valor;

        checkTotal();
    })

    /*
    $('.rd-servico-adicional').click(function() {
        checkTotal();
    });
    */

    $('.botao--processar').click(function (event) {
        if (finalizar) {
            event.preventDefault();
            return false;
        }

        $(this).removeClass('botao--comprar');
        $(this).addClass('botao--processando');
        $(this).html("<i class='fas fa-pulse fa-spinner'></i> Processando...");

        // temp
        //event.preventDefault();
        //return false;

        finalizar = true;
    });

    /**
     * Funções
     */

    function checkAllDocumentos() {
        $('.sl-documento').each(function () {
            checkDocumento($(this));
        });
    }

    function checkDocumento($jqobj) {
        var valor = $jqobj.val();
        var pass = $jqobj.attr('data-pass');

        if (pais == 30) {
            $('.rg-' + pass + ' .pass-cpf').attr("required", "true");
        }

        if (valor == 'passaporte') {
            togglePass(pass);
        } else if (valor == 'certidao') {
            toggleCertidao(pass);
        } else {
            toggleRG(pass);
        }
    }

    function toggleRG(pass) {
        $('.rg-' + pass).show();
        $('.cert-' + pass).hide();
        $('.ps-' + pass).hide();

        if (pais != 30) {
            $('.nacional').hide();
        }
    }

    function togglePass(pass) {
        $('.rg-' + pass).hide();
        $('.cert-' + pass).hide();
        $('.ps-' + pass).show();
        $('.rg-' + pass + ' .pass-cpf').removeAttr("required");
    }

    function toggleCertidao(pass) {
        $('.rg-' + pass).hide();
        $('.cert-' + pass).show();
        $('.ps-' + pass).hide();
        $('.rg-' + pass + ' .pass-cpf').removeAttr("required");
    }

    function checkTotal() {
        totalGeral = 0;

        // principal
        var $servicoPrincipal = $('#servprin');
        var servicoPrincipalValor = parseFloat($servicoPrincipal.data('valor')) * parseInt($servicoPrincipal.data('quantidade'));

        totalGeral += servicoPrincipalValor += ravValor;

        // adicionais
        $('.rd-servico-adicional').each(function () {
            if ($(this).prop('checked')) {
                var valor = parseFloat($(this).data('valor'));

                if (!isNaN(valor)) {
                    totalGeral += valor;
                }
            }
        });

        // promocode geral
        if (descontoPromo) {
            totalGeral -= descontoPromo;
        }

        // Patch para ajustar quando o Promocode for maior que o pacote, evitar que fique negativo. Rods 17082016
        if (totalGeral <= 0) { totalGeral = 0; }
        // Fim Patch

        var valorFinal = "R$ " + formatNum(totalGeral);
        var valorTaxaServico = $(".taxa-servico-campo").html();

        $('.valor-passageiro__valor').text(valorFinal);
        $('.valor-passageiro__taxa-servico').html(valorTaxaServico);

        // Mostrando em outras cotações
        var cotacaoUsd = $('#cotacao-usd');
        if (cotacaoUsd.length != 0) {
            var valorUsd = totalGeral / cotacaoUsd.attr("data-valor");
            cotacaoUsd.html(cotacaoUsd.attr("data-simbolo") + " " + formatNum(valorUsd));
        }
        var cotacaoEur = $('#cotacao-eur');
        if (cotacaoEur.length != 0) {
            var valorEur = totalGeral / cotacaoEur.attr("data-valor");
            cotacaoEur.html(cotacaoEur.attr("data-simbolo") + " " + formatNum(valorEur));
        }
        var cotacaoGeral = $('#cotacao-geral');
        if (cotacaoGeral.length != 0) {
            var valorGeral = totalGeral * cotacaoGeral.attr("data-valor");
            cotacaoGeral.html(cotacaoGeral.attr("data-simbolo") + " " + formatNum(valorGeral));
        }
    }

    function replicaTelefonePassageiro() {
        $(document).ready(function () {
            $(".change-phone-intlddi").change(function () {
                var i = $(this).attr("data-passageiro");
                var ddi = $(this).children("option:selected").attr("data-ddi");
                $("#passageiro2_" + i + "_fone").val(ddi + " " + $("#passageiro_" + i + "_fone").val());
                $("#passageiro_" + i + "_fone").focus();
            });
            $(".pass-fone").change(function () {
                var i = $(this).attr("data-passageiro");
                var ddi = $("#sl-ddi" + i + " option:selected").attr("data-ddi");
                $("#passageiro2_" + i + "_fone").val(ddi + " " + $(this).val());
            });
        });

    }

    /**
     * Inicialização
     */

    function init() {
        checkAllDocumentos();
        checkTotal();
        replicaTelefonePassageiro();

        // fixa resumo
        create_sticky($('#resumo'), $('#resumo-ph'), true);
    }

    init();

})();
// Gerenciamento de pagamento de reservas
// guilhermemuller.com.br
// contato@guilhermemuller.com.br

(function () {

    // variáveis base

    var $contFormasPagamento = $('.formas-pagamento');
    var $formasPagamento = $('.lista-pagamento__item');
    var $checkboxFormasPagamento = $('.lista-pagamento__grid');
    var $inputFormasPagamento = $('.rd-formapag');
    var $inputParcelas = $('.lista-pagamento__parcelas-select');
    var $contCartao = $('.pagamento-cartao');
    var $formasPagamentoAbrir       = $('.formas-pagamento-abrir');
    var $campoTaxaServicos          = $('.tr--operator-taxes .operator-title');
    var $campoTaxaServicosValor     = $('.tr--operator-taxes .operator-value');
    var $campoDescontoVista         = $('.tr--discount-in-cash .dic-title');
    var $campoDescontoVistaValor    = $('.tr--discount-in-cash .dic-value');
    var $campoValorPrincipal        = $('.campo-valor--principal');
    var $camposCalculos = $('.campos-calculos');
    var $resetaCalculos = $('.reseta-calculos');

    var formaPagamento;

    /**
     * Eventos
     */

    $checkboxFormasPagamento.click(function (e) {
        var $checkbox = $(this).parent().find('.rd-formapag');

        if ($checkbox.val() == formaPagamento) {
            return;
        }

        desativaFormasPagamento();
        ativaFormaPagamento($(this).parent());
        scrollTo($contFormasPagamento);

        e.preventDefault();
    });

    $inputParcelas.click(function (e) {
        e.stopPropagation();
    });

    $inputParcelas.change(function () {
        var valor = $(this).val();
        var $jqobj = $('#' + $(this).attr('data-parent'));
        var $atualizapgto = $("#atualizar_pagamento"); // para controlar lá na atualizacao de pagamento da reserva.
        var obrigadadoscartao = 1;

        if ($atualizapgto.length > 0) {
            if ($(this).attr("data-processador") != "offline") {
                obrigadadoscartao = 0;
            }
        }
        if ($(this).attr("data-desabilita-dados-cartao") == 1) {
            obrigadadoscartao = 0; // aqui e' para casos especificos como paypal.
        }

        if (valor != '') {
            var $conteudo = $jqobj.find('.lista-pagamento__conteudo');

            if ($jqobj.hasClass('fp-credito') && obrigadadoscartao) {
                // mostra dados do cartão
                $contCartao.appendTo($conteudo).fadeIn('fast');
            }
        }
        ativaFormaPagamento($jqobj);

    });

    $formasPagamentoAbrir.click(function () {
        desativaFormasPagamento();
    });

    /**
     * Funções
     */

    function ativaFormaPagamento($jqobj) {
        var $parcelas = $jqobj.find('.lista-pagamento__parcelas-select');
        var $checkbox = $jqobj.find('.rd-formapag');
        var parcelas_selected   = $jqobj.find('.lista-pagamento__parcelas-select option:selected');
        var class_selection     = ".lista-pagamento__checkbox";
        if(parcelas_selected.val() != ""){
            class_selection     = ".lista-pagamento__parcelas-select option:selected";
        }
        var booking_total       = $jqobj.find(class_selection).attr("data-booking-total");
        var taxa_servico        = $jqobj.find(class_selection).attr("data-taxa-servico");
        var dic                 = $jqobj.find(class_selection).attr("data-dic");
        var dic_value           = $jqobj.find(class_selection).attr("data-dic-value");
        var taxa_servico_valor  = $jqobj.find(class_selection).attr("data-taxa-servico-valor");
        var taxa_servico_moeda  = $jqobj.find(class_selection).attr("data-taxa-servico-moeda");
        var valor_servico_total_servico     = $jqobj.find(class_selection).attr("data-valor-pricipal-servico");
        var valor_servico_total_dic         = $jqobj.find(class_selection).attr("data-valor-pricipal-dic");
        $checkbox.prop('checked', true);
        $jqobj.attr('data-ativo', 1);
        $parcelas.show();
        $parcelas.css({ 'opacity': 1 });
        $parcelas.prop('disabled', false);

        formaPagamento = $checkbox.val();

        $formasPagamento.hide();
        $jqobj.show();
        $formasPagamentoAbrir.fadeIn('fast');
        $campoValorPrincipal.html(taxa_servico_moeda + " " + booking_total);

        $(".campos-calculos").addClass("esconde");
        $campoTaxaServicos.html("-");
        $campoTaxaServicosValor.html("-");
        if (taxa_servico_valor >0) {
            $(".tr--operator-taxes").removeClass("esconde");
            $campoTaxaServicos.html(taxa_servico);
            $campoTaxaServicosValor.html(taxa_servico_moeda + " " +taxa_servico_valor);
            $campoValorPrincipal.html(taxa_servico_moeda + " " + valor_servico_total_servico);
        }

        if (dic_value >0) {
            $(".tr--discount-in-cash").removeClass("esconde");
            $campoDescontoVista.html(dic);
            $campoDescontoVistaValor.html(taxa_servico_moeda + " " +dic_value);
            $campoValorPrincipal.html(taxa_servico_moeda + " " + valor_servico_total_dic);
        }
    }

    function desativaFormasPagamento() {
        $formasPagamento.attr('data-ativo', 0);
        $inputParcelas.prop('disabled', true);
        $inputParcelas.css({ 'opacity': 0 });
        $inputParcelas.hide();
        $contCartao.hide();
        $formasPagamento.fadeIn('fast');
        $formasPagamentoAbrir.hide();
        $camposCalculos.addClass("esconde");
        $resetaCalculos.html('-');
        $campoValorPrincipal.html($campoValorPrincipal.attr("data-valor-principal"));

        formaPagamento = undefined;
    }



    /**
     * Inicialização
     */

    function init() {
        $contCartao.hide();
        $formasPagamentoAbrir.hide();
        $inputParcelas.hide();
        $camposCalculos.addClass("esconde");

        // verifica se tem forma de pagamento ativa
        $inputFormasPagamento.each(function () {
            if ($(this).prop('checked') == true) {
                // ativa esta forma de pagamento
                var fp_id = $(this).attr('data-forma-pagamento');
                ativaFormaPagamento($('#forma-pagamento' + fp_id));
            }
        });
    }

    init();

})();
